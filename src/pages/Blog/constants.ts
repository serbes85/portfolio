export const articles = [
    {
        id: "0",
        title: "Передача данных между компонентами в React",
        date: "20 декабря 2019",
        content:
            `В реакте поток данных - однонаправленный. Данные
            передаются сверху вниз, от родителя к ребенку, через props.
            Важно помнить, что компонент никогда не должен что-то
            записывать в свои props. Props - это неизменяемый
            объект, предназначенный только для чтения."\n" Передача данных
            между родителем и ребенком. Данный способ является самым
            простым."\n" 1. В родительском компоненте передаем данные из state
            в дочерний компонент."\n" 2. В дочернем компоненте принимаем и
            выводим с помощью props."\n" Передача данных между ребенком и
            родителем."\n" Чтобы отследить изменения состояния дочернего
            компонента в родительском компоненте, используйте Callback
            функцию."\n" Передача данных между ребенком и ребенком. Для
            передачи данных между соседними компонентами, используйте
            родительский компонент.
            Сначала нужно передать данные от ребенка к родителю как аргумент 
            коллбека. Потом присвоить эти данные в стейт родителя и передать 
            через props другому компоненту.`
    },
    {
        id: "1",
        title: "Основы БЭМ",
        date: "20 декабря 2019",
        content:
            `БЭМ (Блок, Элемент, Модификатор) — компонентный подход к
            веб-разработке. В его основе лежит принцип разделения интерфейса на
            независимые блоки. Он позволяет легко и быстро разрабатывать
            интерфейсы любой сложности и повторно использовать существующий код."\n"
            Блок это функционально независимый компонент страницы, который может
            быть повторно использован. В HTML блоки представлены атрибутом
            class. Характеризует смысл («что это?» — «меню»: menu, «кнопка»:
            button), а не состояние («какой, как выглядит?» — «красный»: red,
            «большой»: big)."\n"
            Блок не должен влиять на свое окружение, т. е. блоку не следует
            задавать внешнюю геометрию (в виде отступов, границ, влияющих на
            размеры) и позиционирование. В CSS по БЭМ также не рекомендуется
            использовать селекторы по тегам или id."\n"
            Элемент это составная часть блока, которая не может использоваться
            отдельно от него. Название элемента характеризует смысл («что это?»
            — «пункт»: item, «текст»: text), а не состояние («какой, как
            выглядит?» — «красный»: red, «большой»: big). Структура полного
            имени элемента соответствует схеме: имя-блока__имя-элемента. Имя
            элемента отделяется от имени блока двумя подчеркиваниями (__)."\n"
            Модификатор определяет внешний вид, состояние или поведение блока
            либо элемента. Название модификатора характеризует внешний вид
            («какой размер?», «какая тема?» и т. п. — «размер»: size_s, «тема»:
            theme_islands), состояние («чем отличается от прочих?» — «отключен»:
            disabled, «фокусированный»: focused) и поведение («как ведет себя?»,
            «как взаимодействует с пользователем?» — «направление»:
            directions_left-top). Имя модификатора отделяется от имени блока или
            элемента одним подчеркиванием (_).`,
    },
];